{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@typescript-eslint"
  ],
  "env": {
    "browser": true,
    "es2021": true
  },
  "overrides": [
    {
      "env": {
        "node": true
      },
      "files": [
        ".eslintrc.{js,cjs}"
      ],
      "parserOptions": {
        "sourceType": "script"
      }
    }
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "rules": {
    "@typescript-eslint/array-type": "error",
    "block-spacing": "error",
    "space-before-function-paren": "error",
    "space-in-parens": ["error", "never"],
    "space-infix-ops": "error",
    "linebreak-style": ["error", "unix"], //стиль разрыва строки linebreak-style: ["error", "unix || windows"]
    "no-console": "warn", // без console.log
    "no-debugger": "error",// без debugger
    "constructor-super": "off", // конструкторы производных классов должны вызывать super(). Конструкторы не производных классов не должны вызывать super().
    "no-mixed-operators": [ //Заключение сложных выражений в круглые скобки проясняет замысел разработчика
      "error",
      {
        "groups": [
          ["+", "-", "*", "/", "%", "**"],
          ["&", "|", "^", "~", "<<", ">>", ">>>"],
          ["==", "!=", "===", "!==", ">", ">=", "<", "<="],
          ["&&", "||"],
          ["in", "instanceof"]
        ],
        "allowSamePrecedence": true
      }
    ],
    "import/extensions": "off", // обеспечить согласованное использование расширения файла в пути импорта
    "import/prefer-default-export": "off", // ESLint предпочитает экспорт по умолчанию импорт/предпочитает экспорт по умолчанию
    "no-unused-expressions": "error", //нет неиспользуемых выражений
    "no-param-reassign": "off", //без переназначения параметров
    "prefer-destructuring": ["error", { // требуется деструктуризация массивов и/или объектов.
      "array": true,
      "object": true
    }, {
      "enforceForRenamedProperties": false
    }
    ],
    "brace-style": ["error", "1tbs", { "allowSingleLine": true }],
    "keyword-spacing": ["error", { "before": true }],
    "indent": ["error", 2],
    "quotes": ["error", "single"],
    "key-spacing": ["error", { "beforeColon": false, "afterColon": true }],
    "no-trailing-spaces": ["error", { "skipBlankLines": false }],
    "no-multiple-empty-lines": ["error", { "max": 2, "maxEOF": 0 }],
    "semi": ["error", "never"],
    "comma-spacing": ["error", { "before": false, "after": true }],
    "comma-dangle": ["error", {
      "arrays": "never",
      "objects": "never",
      "imports": "never",
      "exports": "never",
      "functions": "never"
    }],
    "object-curly-spacing": ["error", "always"],
    "no-bitwise": ["error", { "allow": ["~"] }], // запрещает побитовые операторы.
    "no-unused-vars": ["error", { "argsIgnorePattern": "^_" }], // запрещает неиспользуемые переменные.
    "max-len": ["error", { "code": 120 }], // обеспечивает максимальную длину строки.
    "object-curly-newline": ["error", {
      "ObjectExpression": { "multiline": true, "consistent": true },
      "ObjectPattern": { "multiline": true, "consistent": true }
    }], // применяет согласованные разрывы строк после открытия и перед закрытием фигурных скобок.
    "lines-between-class-members": ["error", "always", { "exceptAfterSingleLine": true }] // требует или запрещает пустую строку между членами класса.
  }
}